MEMORY {
    ZP:         start = $0,     size = $100,    type = rw,  define = yes;
    RAM:        start = $200,   size = $7E00,   define=yes;
    ROM:        start = $E000, size = $2000, file   = %O, fill = yes, fillval=$FF;
}

SEGMENTS {
    STARTUP:    load = ROM,     type = ro;  
    ONCE:       load = ROM,     type = ro,      optional = yes;
    CODE:       load = ROM,     type = ro; 
    DATA:       load = ROM,     type = rw,      define   = yes,   run = RAM;
    RODATA:     load = ROM,     type = ro;  
    VECTORS:    load = ROM,     type = ro,      start    = $FFFA;
    ZEROPAGE:   load = ZP,      type = zp,      define   = yes;
    BSS:        load = RAM,     type = bss,     define   = yes;
    HEAP:       load = RAM,     type = bss,     optional = yes;
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    # Define the stack size for the application
    __STACKSIZE__:  value = $0200, type = weak;
}