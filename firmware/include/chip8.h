#ifndef CHIP8_H
#define CHIP8_H

#include <stdint.h>
#include <stdbool.h>

#define DEBUG_PRINT(...)

#define MEMORY_SIZE 4096
#define REGISTER_COUNT 16
#define STACK_SIZE 16
#define PC_START 0x200
#define CHIP8_SCREEN_WIDTH 64
#define CHIP8_SCREEN_HEIGHT 32

static const uint8_t FONT[16][5] = {
    {0xF0, 0x90, 0x90, 0x90, 0xF0}, // 0
    {0x20, 0x60, 0x20, 0x20, 0x70}, // 1
    {0xF0, 0x10, 0xF0, 0x80, 0xF0}, // 2
    {0xF0, 0x10, 0xF0, 0x10, 0xF0}, // 3
    {0x90, 0x90, 0xF0, 0x10, 0x10}, // 4
    {0xF0, 0x80, 0xF0, 0x10, 0xF0}, // 5
    {0xF0, 0x80, 0xF0, 0x90, 0xF0}, // 6
    {0xF0, 0x10, 0x20, 0x40, 0x40}, // 7
    {0xF0, 0x90, 0xF0, 0x90, 0xF0}, // 8
    {0xF0, 0x90, 0xF0, 0x10, 0xF0}, // 9
    {0xF0, 0x90, 0xF0, 0x90, 0x90}, // A
    {0xE0, 0x90, 0xE0, 0x90, 0xE0}, // B
    {0xF0, 0x80, 0x80, 0x80, 0xF0}, // C
    {0xE0, 0x90, 0x90, 0x90, 0xE0}, // D
    {0xF0, 0x80, 0xF0, 0x80, 0xF0}, // E
    {0xF0, 0x80, 0xF0, 0x80, 0x80}  // F
};

typedef struct
{
    // TODO: union the memory map to more closely resemble the original hardware
    uint8_t V[REGISTER_COUNT];
    uint16_t I;
    uint16_t PC;
    uint8_t StackPointer;
    uint16_t Stack[STACK_SIZE];
    uint8_t Memory[MEMORY_SIZE];
    bool Screen[CHIP8_SCREEN_WIDTH][CHIP8_SCREEN_HEIGHT];
    uint8_t (*DelayTimer)(uint8_t);
    // TODO: sound timer
    // TODO: input
} chip8_cpu_t;

void chip8_init(chip8_cpu_t *cpu, uint8_t (*delay_timer)(uint8_t));

void chip8_cycle(chip8_cpu_t *cpu);

#endif
